name: Release on push to tag

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  win-build:
    runs-on: windows-latest
    permissions: 
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up MinGW
        uses: egor-tensin/setup-mingw@v2
        with:
          version: 12.2.0

      - name: Debug
        run: ls -l C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\lib

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -B build/ -G 'MinGW Makefiles'-DCMAKE_CXX_COMPILER='c++' -DCMAKE_C_COMPILER='cc' -S . -DCMAKE_CXX_FLAGS='-static-libstdc++ -static-libgcc' -DCMAKE_C_FLAGS='-static-libgcc'

      - name: Build
        # Build your program with the given configuration. Note that --config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
        run: cmake --build build/

      - name: Upload executable
        uses: actions/upload-artifact@v4
        with:
          name: lect-${{ github.ref_name }}-win-x64
          path: build/lect.exe

  linux-build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Install necessary packages
        run: sudo apt update && sudo apt install cmake clang-18 pkg-config

      - name: Run CMake for Linux
        run: mkdir build && cmake -S . -B build/ -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++

      - name: Compile for Linux
        run: cd build && make

      - name: Upload executable
        uses: actions/upload-artifact@v4
        with:
          name: lect-${{ github.ref_name }}-linux-x64
          path: build/lect

  release:
    runs-on: ubuntu-latest
    needs: [win-build, linux-build]
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Download Linux executable
        uses: actions/download-artifact@v4
        with:
          name: lect-${{ github.ref_name }}-linux-x64

      - name: Rename Linux executable
        run: mv lect lect-${{ github.ref_name }}-linux-x64

      - name: Download Windows executable
        uses: actions/download-artifact@v4
        with:
          name: lect-${{ github.ref_name }}-win-x64

      - name: Rename Windows executable
        run: mv lect.exe lect-${{ github.ref_name }}-win-x64.exe

      - name: Release
        uses: softprops/action-gh-release@v2
        with: 
          files: |
            lect-${{ github.ref_name }}-linux-x64
            lect-${{ github.ref_name }}-win-x64.exe
